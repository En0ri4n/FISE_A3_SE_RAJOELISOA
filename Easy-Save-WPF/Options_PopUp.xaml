<Window x:Class="Easy_Save_WPF.Options_PopUp"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Flags="clr-namespace:FamFamFam.Flags.Wpf;assembly=FamFamFam.Flags.Wpf"
        Title="Options" Height="725" Width="800" WindowStartupLocation="CenterOwner" Background="#FAFAFA" 
        ResizeMode="NoResize"
        FontFamily="Segoe UI">      
    <!-- Todo make icon work Idea: Icon="pack://application:,,,/assets/Options_PopUp.ico" -->


    <Window.Resources>
        <Flags:CountryIdToFlagImageSourceConverter x:Key="CountryIdToFlagImageSourceConverter" />

        <!-- Main buttons style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#4A90E2"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="5" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#357ABD"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2E5C9D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#B0B0B0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary buttons style -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#4A90E2"/>
            <Setter Property="BorderBrush" Value="#4A90E2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="5" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E6F0FF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#C3D6FF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#B0B0B0"/>
                                <Setter Property="BorderBrush" Value="#B0B0B0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBlock for Labels style -->
        <Style TargetType="TextBlock" x:Key="LabelStyle">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="150"/>
        </Style>

        <!-- ListBox style -->
        <Style TargetType="ListBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0,5"/>
        </Style>

        <!-- TextBox white background -->
        <Style x:Key="InfoBoxStyle" TargetType="TextBlock">
            <Setter Property="Background" Value="#F0F0F0"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Title -->
        <TextBlock Text="Options Configuration" FontSize="30" FontWeight="Bold" Margin="0 0 0 8" Grid.Row="0" HorizontalAlignment="Center" Foreground="#333"/>

        <!-- Subtitle -->
        <TextBlock Text="Everything updates in real time" FontSize="18" Margin="0 0 0 20" Grid.Row="1" HorizontalAlignment="Center" Foreground="#666"/>

        <!-- Body -->
        <StackPanel Grid.Row="2" VerticalAlignment="Top">
            <!-- Language -->
            <StackPanel Orientation="Horizontal" Margin="0 0 0 18">
                <TextBlock Text="Language:" Style="{StaticResource LabelStyle}"/>
                <ComboBox ItemsSource="{Binding AvailableLanguages}"
                  UseLayoutRounding="True" 
                  SelectedItem="{Binding CurrentApplicationLang, Mode=TwoWay}"
                  Width="200" FontSize="14" Padding="4">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding IsoCode, Converter={StaticResource CountryIdToFlagImageSourceConverter}}" 
                                   Width="23" Height="18" 
                                   Stretch="None" 
                                   RenderOptions.BitmapScalingMode="HighQuality" 
                                   VerticalAlignment="Center" />
                                <TextBlock Text="{Binding Name}" Margin="5,0,0,0" VerticalAlignment="Center" FontWeight="Normal"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <!-- Log Type -->
            <StackPanel Orientation="Horizontal" Margin="0 0 0 18">
                <TextBlock Text="Log Type:" Style="{StaticResource LabelStyle}"/>
                <ComboBox Name="LogTypeComboBox" Width="200" FontSize="14" Padding="4" ItemsSource="{Binding AvailableDailyLogFormats}"
                           SelectedItem="{Binding CurrentDailyLogFormat, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Margin="5,0,0,0" VerticalAlignment="Center" FontWeight="Normal"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <!-- Daily Log Directory -->
            <StackPanel Orientation="Horizontal" Margin="0 0 0 18">
                <TextBlock Text="Daily Log Dir:" Style="{StaticResource LabelStyle}"/>
                <TextBlock Name="DailyLogPathText" Text="{Binding DailyLogPath}" Style="{StaticResource InfoBoxStyle}"/>
                <Button Content="Browse" Command="{Binding ShowFolderDialogCommand}" CommandParameter="true" Style="{StaticResource SecondaryButtonStyle}"/>
                <Button Content="Reset" Command="{Binding ResetFolderLogPathCommand}" CommandParameter="true" Style="{StaticResource SecondaryButtonStyle}"/>
            </StackPanel>

            <!-- Status Log Directory -->
            <StackPanel Orientation="Horizontal" Margin="0 0 0 18">
                <TextBlock Text="Status Log Dir:" Style="{StaticResource LabelStyle}"/>
                <TextBlock Name="StatusLogPathText" Text="{Binding StatusLogPath}" Style="{StaticResource InfoBoxStyle}"/>
                <Button Content="Browse" Command="{Binding ShowFolderDialogCommand}" CommandParameter="false" Style="{StaticResource SecondaryButtonStyle}"/>
                <Button Content="Reset" Command="{Binding ResetFolderLogPathCommand}" CommandParameter="false" Style="{StaticResource SecondaryButtonStyle}"/>
            </StackPanel>

            <!-- Extensions -->
            <StackPanel Margin="0 0 0 18">
                <TextBlock Text="File Extensions for Encryption:" FontSize="16" FontWeight="SemiBold" Margin="0 0 0 6"/>

                <ListBox ItemsSource="{Binding ExtensionsToEncrypt}" Height="80" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" Margin="0,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{Binding}" FontSize="14" VerticalAlignment="Center" Grid.Column="0"/>
                                <Button Content="Delete" Grid.Column="1"
                                        Command="{Binding DataContext.RemoveExtensionToEncryptCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="0 0 5 0" Padding="3,1"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Orientation="Horizontal" Margin="0 6 0 0">
                    <TextBox Text="{Binding NewExtension, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="0 0 10 0" Padding="4"/>
                    <Button Content="Add" Command="{Binding AddExtensionToEncryptCommand}" CommandParameter="{Binding NewExtension}" Style="{StaticResource SecondaryButtonStyle}"/>
                </StackPanel>
            </StackPanel>

            <!-- Processes blacklist -->
            <StackPanel Margin="0 0 0 18">
                <TextBlock Text="Processes to Blacklist:" FontSize="16" FontWeight="SemiBold" Margin="0 0 0 6"/>

                <ListBox ItemsSource="{Binding ProcessesToBlacklist}" Height="80" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" Margin="0,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{Binding}" FontSize="14" VerticalAlignment="Center" Grid.Column="0"/>
                                <Button Content="Delete" Grid.Column="1"
                                        Command="{Binding DataContext.RemoveProcessToBlacklistCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="0 0 5 0" Padding="3,1"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Orientation="Horizontal" Margin="0 6 0 0">
                    <TextBox Text="{Binding NewProcess, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="0 0 10 0" Padding="4"/>
                    <Button Content="Add" Command="{Binding AddProcessToBlacklistCommand}" CommandParameter="{Binding NewProcess}" Style="{StaticResource SecondaryButtonStyle}"/>
                </StackPanel>
            </StackPanel>

        </StackPanel>

        <!-- Footer -->
        <StackPanel Grid.Row="3" HorizontalAlignment="Right" Margin="0 10 0 0">
            <Button Content="Close" Width="90" Click="CloseButton_Click"/>
        </StackPanel>
    </Grid>
</Window>
